name: Build and Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Login to Docker Hub
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/image_name:latest .

      # Step 4: Push Docker Image
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/image_name:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up SSH Access to the EC2 instance
      - name: Set up SSH Access
        uses: appleboy/ssh-action@main
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}

      # Step 2: Pull the Docker image and run the container
      - name: Deploy Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/image_name:latest
          docker stop app_container || true
          docker rm app_container || true
          docker run -d --name app_container -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/image_name:latest
          EOF
